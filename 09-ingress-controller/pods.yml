--- 
apiVersion: v1
kind: Pod
metadata:
  name: app1
  labels:
    app: app1
spec:
  containers:
  - name: httpd
    image: rkalluru/k04-ingress-app1:v1 
    resources:
      limits:
        memory: "128Mi"
        cpu: "100m"
      requests:
        memory: "64Mi"
        cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: app1-svc
spec:
  selector:
    app: app1
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

--- 
apiVersion: v1
kind: Pod
metadata:
  name: app2
  labels:
    app: app2
spec:
  containers:
  - name: httpd
    image: rkalluru/k04-ingress-app2:v1 
    resources:
      limits:
        memory: "128Mi"
        cpu: "100m"
      requests:
        memory: "64Mi"
        cpu: "100m"

---
apiVersion: v1
kind: Service
metadata:
  name: app2-svc
spec:
  selector:
    app: app2
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pod-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /app1
        backend:
          serviceName: app1-svc
          servicePort: 80
      - path: /app2
        backend:
          serviceName: app2-svc
          servicePort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: name-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: app1.devopsproj.com
    http:
      paths:
      - backend:
          serviceName: app1-svc
          servicePort: 80
  - host: app2.devopsproj.com
    http:
      paths:
      - backend:
          serviceName: app2-svc
          servicePort: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: app1-tls
data:
  tls.crt: 
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3VJZWRPQ3ZnMWRxVmEKdnd5TDJwM2swQWpPdkpUb1dJaDdxS09sMjIxL0IrU2dGTjY2UHYrMzhVUjg4YUpFQjROSHUrNGFGRXViS1RBcwpTcS9xUmM4Uko5Z3A4dnRsb1lkcFRuYVNaYnVzT3JnWXNidHV0cnVGSjF4Y0Z5Q29FU0xIR1p5aHpvb2hLTUZrCml4UmlWQzRHM2pTYW4yZnM0dFRndENoNGZQc0xHQWdrNXJLYS9lNyt0eDcvaUROeFlEamZBUmIySkVrNnlSbWUKc1BpRFplc1VRNXc5K0E1VHR2eFFnN2F6Vllya2Fic2JjdjhQa29ERU41Y0l4RmJieURVd2RHTTA5OU14UWFOWgpuSE9EMDJIbllrZ1NZMlBRSFk4YjFOYklUOVdWSTFXMituV1QxZlI0elYyMXNzM1R0VGh5VjR3YW9iamhQamZ5Cm5yR0tqZnFWQWdNQkFBRUNnZ0VBUlV0NG9MWDgwRW5HdzdZRGFDUTNjVGJZU20wQlZQVG1XMDlnMEQvaDh3dFIKRCtNK1B4K1M0OEEvWVBsSGVZc0QweWdXT0lxYkM4UDRSNmZ4R1dsdVhZVmRvRlB4ZHlBd290ZDJtQXVrQTRYYQpmUGs5ZlhGNmJpS2J2b24xbE93OHlyNkdkbDJhMmxjOW5xVTZGMmNvYWRORFc4VFR0cEVONWQzTHZTYi9RQXBICklUY1F6d0VtQ1VoUUU4cWhPRldtT3VMc1dnQzY4UUFqYnNWWlN4cnVXTDVmY0R1aVE0bHFmbHVweEJRTlRobWgKcHMyT25yZExFdS8ybE56bGQvdzJiYUJBTzRpZGlrMjhwbDlhMzVwY3FZckdieS9yQ0RLWVZMQWlGMk9EbFc1YwpVY0VON0R1eE8wbllPb1dQUmxWVEV0K0tXb3E3aksxU3A3OXBleGt5Z1FLQmdRRHIxTmwvNkQwMWozaDRCbGd0Cm1WbmI3QytDblRWQkxrQUlHRlBsWFhJOVNjVENsekk0T1lQcnpDcXJTb0tuUEpEN2o5MHBvYXdzOTMzM1piRlIKQXV6NDgzdTJhMGM0NWs0NHNvejJML3JVLzYweUNPb3cyWWhQMnk5SjRZc1I2Q2U2eWNnS3ZRQ3BHbjNaWHcyMwp2cUUzUERmRGxaYUJFME1BNWNtWkJseTFDd0tCZ1FDOUJrRFpibW9qTC9lNmZJbW05Qkgvenp2OTZ5NUdzbThjClgxUGk3WWNQbWE3OFg5VUwwc2doRnFtdzhyMWI4RmFOU0lmTmRNQ0p1ZTFidmVXSVQrTkN2T2ZrSE5lZTBaZngKTldSSmduQ2QxQ2pXQklyWWs2bFlUMU9vZUNXUFNkeWw2MWFMRCtncWVhL0IzSHBGWlhIOURDb3RGOWNzUkZCWQpjLzlVNFNTUzN3S0JnUUNpVTNJYVhvcXpNVHZrc2NsRUtjZjJYczRkQTRUQ2hzbEFTUzZHTkJvTUlaaXpzRXE2CjlLdmZSRHNpaURrQ1QrZ2puOVRGY1NrSUVwcThEVjFOdTh2TldCc1JaeW93K2lWaFZWVTlwNnpwcTh0VkkxbS8Kb2h2M2k1RXpNM0g4TTJZVlpncXhpWUxJNHhrNDQvcVhQVG5Pd1Q1SSs5QUtyRzEwVXJhL0ErZ1FIUUtCZ1FDRgppdzV6enVNamV2Y2RCSEZIeDNXVDhmZ2pXMjAxTzBqdWxaYXhZemloVitWZG5lTHBXSUJWaUNwWXZoWDBCMmRPCnA2aHlDZ01oQ245YjZseG9vbkFmclZCelE4RStEanUzaVE0U05ScVZGdGZHNUN5bitDS1RKbkFuUE1Ma2FiMSsKWnphY1JwK3lxb2YyZ1dyTTdtL0s1RFpENTJ6NGRFY0RSdWhrTWkvaHB3S0JnRVg0Zit2MkpseXpsUWZ4b3lYUgoxaC9qbGxaelNKbzQ0eGxzNlVpZHlSZGVrQm9NTDhhNkpscjJFbWVrVnRpd3RFQkJIU0hDQUQ3V2VMUjJnVmJpCm80UllTUDhNcVhFb0hXam1qSnNsR0w5MU5hQ08wQ2xMRTBUQTViQjk1UDB2dVVYU0JlNjJsOW5pKytFd2luNXMKckJPQ29UUDFxREc1QzB1b0E1bnRrdkZ3Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
type: kubernetes.io/tls